{"data":{"markdownRemark":{"htmlAst":{"type":"root","children":[{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Forms handle state, validation, and error handling so that the internal components don't have to worry about them."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Form"}]},{"type":"text","value":" component works by building up its "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"fields"}]},{"type":"text","value":", where the field name, initial value, label, and rendered children\nare defined. These "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"fields"}]},{"type":"text","value":" can then be used within the "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Form"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"A "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Form"}]},{"type":"text","value":" will generally look like this:"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{"className":["sg-pre","language-jsx"]},"children":[{"type":"element","tagName":"code","properties":{"className":["sg-code","language-jsx"]},"children":[{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"<"}]},{"type":"text","value":"Form "},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"{"}]},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"..."}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"{"}]},{"type":"text","value":"\n  fields"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"{"}]},{"type":"text","value":"\n    fieldName"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"{"}]},{"type":"element","tagName":"span","properties":{"className":["token","comment"]},"children":[{"type":"text","value":"/*...*/"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"}"}]},{"type":"text","value":"\n  "},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"}"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"}"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"}"}]},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":">"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"{"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"{"}]},{"type":"text","value":"fields"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"}"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"=>"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"{"}]},{"type":"text","value":"\n  "},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"return"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"text","value":"\n    "},{"type":"element","tagName":"span","properties":{"className":["token","tag"]},"children":[{"type":"element","tagName":"span","properties":{"className":["token","tag"]},"children":[{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"<"}]},{"type":"text","value":"div"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":">"}]}]},{"type":"element","tagName":"span","properties":{"className":["token","plain-text"]},"children":[{"type":"text","value":"\n      "}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"{"}]},{"type":"text","value":"fields"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"."}]},{"type":"text","value":"fieldName"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"}"}]},{"type":"element","tagName":"span","properties":{"className":["token","plain-text"]},"children":[{"type":"text","value":"\n    "}]},{"type":"element","tagName":"span","properties":{"className":["token","tag"]},"children":[{"type":"element","tagName":"span","properties":{"className":["token","tag"]},"children":[{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"</"}]},{"type":"text","value":"div"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":">"}]}]},{"type":"text","value":"\n  "},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":";"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"}"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"}"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"span","properties":{"className":["token","tag"]},"children":[{"type":"element","tagName":"span","properties":{"className":["token","tag"]},"children":[{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"</"}]},{"type":"text","value":"Form"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":">"}]}]}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Basic Forms"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"We can set an "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"initialValue"}]},{"type":"text","value":" to pre-fill each field. When the form is reset before submitting,\nall fields will revert to their "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"initialValue"}]},{"type":"text","value":", if provided. In the Email Form below, the email field has been pre-filled to "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"my@me.com"}]},{"type":"text","value":"."}]},{"type":"text","value":"\n\n        "},{"type":"element","tagName":"code-editor","properties":{"language":"jsx","title":"Email Form","description":"<p>We use the <code>Form</code>'s <code>canSubmit</code> function to control whether or not the \"Subscribe\" button is disabled. We attach the <code>Form</code>'s <code>reset</code> function to the \"Reset\" button to allow it to reset the form's state.</p>\n","code":"<Form {...{\n  fields: {\n    email: {\n      label: 'Email',\n      initialValue: 'my@me.com'\n    }\n  }\n}}>\n{({fields, canSubmit, reset}) => {\n  return (\n    <div>\n      {fields.email}\n      <Grid>\n        <FlexCol/>\n        <FlexCol fixed>\n          <div>\n            <PrimaryButton alt onClick={reset}>Reset</PrimaryButton>\n            <PrimaryButton disabled={!canSubmit()} type=\"submit\">Subscribe</PrimaryButton>\n          </div>\n        </FlexCol>\n      </Grid>\n    </div>\n  );\n}}\n</Form>"},"children":[{"type":"text","value":"\n        "}]},{"type":"text","value":"\n      \n"},{"type":"element","tagName":"h4","properties":{},"children":[{"type":"text","value":"Optional Fields"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"When you set "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"optional: true"}]},{"type":"text","value":" on a field, it can affect both the appearance of the field and the behavior\nof the form. The text \"(Optional)\" is added to the field label, and the field is no longer considered required."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"To change the text that is added to the label, set the "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"optionalText"}]},{"type":"text","value":" property within the field object. In the example below,\nwe have set "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"optional: true"}]},{"type":"text","value":" and "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"optionalText: '(Opt)'"}]},{"type":"text","value":" for the "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Last Name"}]},{"type":"text","value":" field."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Inline Forms & Label Position"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"When you set the "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"inline"}]},{"type":"text","value":" property to "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"true"}]},{"type":"text","value":", the label gets positioned next to the field instead\nof above it. By default, the label will appear to the left of the field, but you can set "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"labelPosition: 'after'"}]},{"type":"text","value":"\nto place the label on the right."}]},{"type":"text","value":"\n\n        "},{"type":"element","tagName":"code-editor","properties":{"language":"jsx","title":"Inline Form","description":"","code":"<Form {...{\n  fields: {\n    firstName: {\n      inline: true,\n      label: 'First Name'\n    },\n    lastName: {\n      inline: true,\n      label: 'Last Name',\n      optional: true,\n      optionalText: '(Opt)'\n    },\n    accept: {\n      inline: true,\n      labelPosition: 'after',\n      label: 'I accept the terms and conditions',\n      children: <Checkbox/>\n    },\n    toggle: {\n      inline: true,\n      label: 'Actually read the terms',\n      children: <Toggle/>\n    }\n  }\n}}>\n{({fields, canReset, reset}) => {\n  return (\n    <div>\n      <Grid>\n        <FlexCol>{fields.firstName}</FlexCol>\n        <FlexCol>{fields.lastName}</FlexCol>\n      </Grid>\n      <Grid>\n        <FlexCol>{fields.accept}</FlexCol>\n        <FlexCol>{fields.toggle}</FlexCol>\n        <FlexCol fixed><PrimaryButton alt disabled={!canReset()} onClick={reset}>Reset</PrimaryButton></FlexCol>\n      </Grid>\n    </div>\n  );\n}}\n</Form>"},"children":[{"type":"text","value":"\n        "}]},{"type":"text","value":"\n      \n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Tooltips"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"tooltip"}]},{"type":"text","value":" prop makes an icon with a tooltip appear next to the label.\n"},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"tooltipSize"}]},{"type":"text","value":" can be set to: "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"sm"}]},{"type":"text","value":", "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"md"}]},{"type":"text","value":" or "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"lg"}]},{"type":"text","value":" in order to control it's size. And it's placement can be controlled\nvia the "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"tooltipPlacement"}]},{"type":"text","value":" prop with the following options: "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"left"}]},{"type":"text","value":", "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"right"}]},{"type":"text","value":", "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"bottom"}]},{"type":"text","value":", "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"top"}]},{"type":"text","value":"."}]},{"type":"text","value":"\n\n        "},{"type":"element","tagName":"code-editor","properties":{"language":"jsx","title":"Tooltips","description":"","code":"<Form {...{\n  fields: {\n    accept1: {\n      inline: true,\n      label: ' This has a tooltip on the top',\n      labelPosition: 'after',\n      tooltip: 'This is a tooltip',\n      tooltipSize: 'sm',\n      children: <Checkbox/>\n    },\n    accept2: {\n      inline: true,\n      label: ' This has a large tooltip on the left',\n      labelPosition: 'after',\n      tooltip: 'This is a tooltip with lots of text. This is a tooltip with lots of text. This is a tooltip with lots of text.',\n      tooltipSize: 'lg',\n      tooltipPlacement: 'left',\n      children: <Checkbox/>\n    }\n  }\n}}>\n{({fields}) => {\n  return (\n    <div>\n      <Grid>\n        <FlexCol>{fields.accept1}</FlexCol>\n        <FlexCol>{fields.accept2}</FlexCol>\n      </Grid>\n    </div>\n  );\n}}\n</Form>"},"children":[{"type":"text","value":"\n        "}]},{"type":"text","value":"\n      \n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Accessing the Form state"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Form"}]},{"type":"text","value":"'s childen has access to its state to determine how it wants to render."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"For example, one field can determine whether to hide or show another field."}]},{"type":"text","value":"\n\n        "},{"type":"element","tagName":"code-editor","properties":{"language":"jsx","title":"Hiding or showing another field","description":"","code":"<Form {...{\n  fields: {\n    show: {\n      label: 'Toggle to hide/show',\n      inline: true,\n      labelPosition: 'after',\n      initialValue: false,\n      children: <Toggle/>\n    },\n    employeeName: {\n      label: 'Employee Name'\n    }\n  }\n}}>\n{({fields, state}) => {\n  return (\n    <div>\n      {fields.show}\n      <ExpanderContent {...{expanded: state.current.show, delay: 200}}>\n        {fields.employeeName}\n      </ExpanderContent>\n    </div>\n  );\n}}\n</Form>"},"children":[{"type":"text","value":"\n        "}]},{"type":"text","value":"\n      \n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Or use one field to determine the contents of another field."}]},{"type":"text","value":"\n\n        "},{"type":"element","tagName":"code-editor","properties":{"language":"jsx","title":"Dynamic Field Generation","description":"","code":"<Form {...{\n  className: 'mbn',\n  fields: {\n    color: {\n      label: 'Choose a color',\n      initialValue: 'rgba(0,255,0,0.5)',\n      children: (\n        <select>`\n          <option value=\"rgba(0,255,0,0.5)\">green</option>\n          <option value=\"rgba(255,0,0,0.5)\">red</option>\n        </select>\n    )}\n  }\n}}>\n  {({fields: {color}, state: {current}}) => (\n    <div>\n      <div>{color}</div>\n      <div {...{style: {backgroundColor: current.color, textAlign: 'center'}}}>\n        Styled dynamically from first field\n      </div>\n    </div>\n  )}\n</Form>"},"children":[{"type":"text","value":"\n        "}]},{"type":"text","value":"\n      \n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Client-side Validation"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"In this next example, we do two kinds of client-side validation."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"First, we define a "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"validator"}]},{"type":"text","value":" prop on the first field to make sure that the password's length is 8 or\nmore characters. "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"validator"}]},{"type":"text","value":" functions take in the current value of the field that they are validating and\nreturn either an error message (if there is a validation error) or a falsy value (if there is no error)."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Next, to construct the \"Save Password\" button, we look at the current form state and render the button as\ndisabled when "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"state.current.password1"}]},{"type":"text","value":" and "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"state.current.password2"}]},{"type":"text","value":" do not match."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The field is validated as the user enters a value. When the value is invalid, the "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"canSubmit"}]},{"type":"text","value":" function will return "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"false"}]},{"type":"text","value":". The value will only be shown to be invalid after that field loses focus. As soon as the the value becomes valid again, "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"canSubmit"}]},{"type":"text","value":" will return "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"true"}]},{"type":"text","value":", and the value will be shown to be valid again."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Due to the above behavior, we recommend against using a validator on the final field of a "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Form"}]},{"type":"text","value":". The experience can be jarring when a user wants to click the Submit button, but is unable due to a validation error that will only be shown after the field loses focus."}]},{"type":"text","value":"\n\n        "},{"type":"element","tagName":"code-editor","properties":{"language":"jsx","title":"Validated Fields Form","description":"","code":"<Form {...{\n  fields: {\n    password1: {\n      label: 'Enter your password',\n      validator: currentValue => currentValue.length < 8 ? 'Password must be 8+ characters' : null,\n      children: <Input type=\"password\" placeholder=\"Password\"/>\n    },\n    password2: {\n      help: 'Enter a matching password (button will remain disabled unless they match)',\n      retainLabelHeight: true,\n      children: <Input type=\"password\" placeholder=\"Re-enter password\"/>\n    }\n  }\n}}>\n{({fields, state, canSubmit}) => {\n  const passwIsValid = state.current.password1 !== '' && state.current.password1 === state.current.password2;\n  return (\n    <div>\n      <Grid>\n        <FlexCol>{fields.password1}</FlexCol>\n        <FlexCol>{fields.password2}</FlexCol>\n      </Grid>\n      <Grid>\n      <FlexCol/>\n      <FlexCol fixed><PrimaryButton {...{\n        disabled: !passwIsValid || !canSubmit(),\n        type: 'submit'\n      }}>Save Password</PrimaryButton></FlexCol>\n      </Grid>\n    </div>\n  );\n}}\n</Form>"},"children":[{"type":"text","value":"\n        "}]},{"type":"text","value":"\n      \n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Field "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"id"}]},{"type":"text","value":"s & label "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"for"}]},{"type":"text","value":"s"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"All fields require an "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"id"}]},{"type":"text","value":". If you do not provide one, a unique "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"id"}]},{"type":"text","value":" will be generated for you. It is used to\nset the "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"for"}]},{"type":"text","value":" attribute on the corresponding "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"<label>"}]},{"type":"text","value":" tag, so that the label is semantically connected to a specific\ninput."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{"className":["sg-pre","language-jsx"]},"children":[{"type":"element","tagName":"code","properties":{"className":["sg-code","language-jsx"]},"children":[{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"<"}]},{"type":"text","value":"Form "},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"{"}]},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"..."}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"{"}]},{"type":"text","value":"\n  fields"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"{"}]},{"type":"text","value":"\n    host"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"{"}]},{"type":"text","value":"label"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"'Host'"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"}"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":","}]},{"type":"text","value":"\n    path"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"{"}]},{"type":"text","value":"label"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"'Path'"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":","}]},{"type":"text","value":" children"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","tag"]},"children":[{"type":"element","tagName":"span","properties":{"className":["token","tag"]},"children":[{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"<"}]},{"type":"text","value":"Input"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","attr-name"]},"children":[{"type":"text","value":"id"}]},{"type":"element","tagName":"span","properties":{"className":["token","attr-value"]},"children":[{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"="}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"\""}]},{"type":"text","value":"the-path"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"\""}]}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"/>"}]}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"}"}]},{"type":"text","value":"\n  "},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"}"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"}"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"}"}]},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":">"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"{"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"{"}]},{"type":"text","value":"fields"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"}"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"=>"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"text","value":"\n  "},{"type":"element","tagName":"span","properties":{"className":["token","tag"]},"children":[{"type":"element","tagName":"span","properties":{"className":["token","tag"]},"children":[{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"<"}]},{"type":"text","value":"div"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":">"}]}]},{"type":"element","tagName":"span","properties":{"className":["token","plain-text"]},"children":[{"type":"text","value":"\n    "}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"{"}]},{"type":"text","value":"fields"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"."}]},{"type":"text","value":"host"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"}"}]},{"type":"element","tagName":"span","properties":{"className":["token","plain-text"]},"children":[{"type":"text","value":"\n    "}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"{"}]},{"type":"text","value":"fields"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"."}]},{"type":"text","value":"path"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"}"}]},{"type":"element","tagName":"span","properties":{"className":["token","plain-text"]},"children":[{"type":"text","value":"\n  "}]},{"type":"element","tagName":"span","properties":{"className":["token","tag"]},"children":[{"type":"element","tagName":"span","properties":{"className":["token","tag"]},"children":[{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"</"}]},{"type":"text","value":"div"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":">"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"}"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"span","properties":{"className":["token","tag"]},"children":[{"type":"element","tagName":"span","properties":{"className":["token","tag"]},"children":[{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"</"}]},{"type":"text","value":"Form"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":">"}]}]}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Composite fields"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"When the state of a field is best represented by a collection (e.g. an array or an object), use a composite field."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"An initial value must be provided in order for the "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Reset"}]},{"type":"text","value":" button to work properly."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{},"children":[{"type":"text","value":"onChange"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"An "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"onChange"}]},{"type":"text","value":" callback needs to be provided for each input element. This callback should use the "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Form"}]},{"type":"text","value":"'s "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"onChange"}]},{"type":"text","value":" function to update its value. In the example below, both inputs have their own "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"onChange"}]},{"type":"text","value":" callback."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Use "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"stopPropagation"}]},{"type":"text","value":" within "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"onChange"}]},{"type":"text","value":" to stop the "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Form"}]},{"type":"text","value":" from overriding its composite value."}]},{"type":"text","value":"\n\n        "},{"type":"element","tagName":"code-editor","properties":{"language":"jsx","title":"Input with custom onChange","description":"","code":"<Form {...{\n  id: 'composite-fields-example',\n  fields: {\n    url: {\n      label: 'URL',\n      labelFor: 'host-input',\n      initialValue: {host: '', path: ''},\n      children: ({state: {current: {url: {host, path}}}, onChange}) => (\n        <Grid>\n          <FlexCol fixed>https://</FlexCol>\n          <FlexCol>\n            <Input id=\"host-input\" value={host} onChange={e => {\n              e.stopPropagation();\n              onChange({host: e.target.value, path});\n            }}/>\n          </FlexCol>\n          <FlexCol fixed>/</FlexCol>\n          <FlexCol>\n            <Input value={path} onChange={e => {\n              e.stopPropagation();\n              onChange({host, path: e.target.value});\n            }}/>\n          </FlexCol>\n        </Grid>\n      )\n    }\n  }\n}}>\n{({fields, state: {current}, reset}) => (\n  <div>\n    {fields.url}\n    State:\n    <pre>{JSON.stringify(current.url, null, 2)}</pre>\n    <Grid>\n    <FlexCol/>\n    <FlexCol fixed><PrimaryButton onClick={reset}>Reset</PrimaryButton></FlexCol>\n    </Grid>\n  </div>\n)}\n</Form>"},"children":[{"type":"text","value":"\n        "}]},{"type":"text","value":"\n      \n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Form submission"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Define an "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"onSubmit"}]},{"type":"text","value":" prop on a "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Form"}]},{"type":"text","value":" to do something with the state values on submission.\nThe "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"onSubmit"}]},{"type":"text","value":" method is passed "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"{state: {initial, current}}"}]},{"type":"text","value":"."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"canSubmit"}]},{"type":"text","value":" function is available to help determine whether a form is ready for submission.\nIt returns "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"true"}]},{"type":"text","value":" if all required fields are filled and if all fields are different from their initial value."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"By default, a button within the "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Form"}]},{"type":"text","value":" that has "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"type=\"submit\""}]},{"type":"text","value":" will trigger submission. This behavior can also be attached to another field that takes in the "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"onSubmit"}]},{"type":"text","value":", as shown below."}]},{"type":"text","value":"\n\n        "},{"type":"element","tagName":"code-editor","properties":{"language":"jsx","title":"Form submission","description":"","code":"<Form {...{\n  onSubmit: ({initial, current}) => alert(`You changed your name from ${initial.firstName} ${initial.lastName} to ${current.firstName} ${current.lastName}`),\n  fields: {\n    firstName: {\n      initialValue: 'John',\n      label: 'First Name'\n    },\n    lastName: {\n      initialValue: 'Doe',\n      label: 'Last Name'\n    }\n  }\n}}>\n{({fields, canSubmit, onSubmit}) => {\n  return (\n    <div>\n      <Grid>\n        <FlexCol>{fields.firstName}</FlexCol>\n        <FlexCol>{fields.lastName}</FlexCol>\n      </Grid>\n      <Grid>\n        <FlexCol/>\n        <FlexCol className=\"mtxxxl\" fixed><a onClick={() => canSubmit() && onSubmit()} href={'#form-submission'}>This can also submit</a></FlexCol>\n        <FlexCol className=\"mtxxxl\" fixed><PrimaryButton type=\"submit\" disabled={!canSubmit()}>Submit</PrimaryButton></FlexCol>\n      </Grid>\n    </div>\n  );\n}}\n</Form>"},"children":[{"type":"text","value":"\n        "}]},{"type":"text","value":"\n      \n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Form error handling"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Define a "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"onSubmitError"}]},{"type":"text","value":" handler to map error messages to a specific field. Return an object keyed by the field's "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"name"}]},{"type":"text","value":" to determine where the error is shown."}]},{"type":"text","value":"\n\n        "},{"type":"element","tagName":"code-editor","properties":{"language":"jsx","title":"Form submission","description":"<p>The error is attached to the first name field.</p>\n","code":"<Form {...{\n  onSubmit: ({current}) => {\n      if (current.firstName.startsWith('F')) throw new Error(`First name ${current.firstName} begins with 'F'`);\n  },\n  onSubmitError: error => error.message.indexOf('First name') > -1 ? {firstName: error.message} : null,\n  fields: {\n      firstName: {\n        initialValue: 'John',\n        label: 'First Name',\n        help: 'First names beginning with \"F\" will have errors shown here'\n      },\n      lastName: {\n        initialValue: 'Doe',\n        label: 'Last Name'\n      }\n    }\n}}>\n{({fields, canSubmit}) => {\n  return (\n    <Grid>\n      <FlexCol>{fields.firstName}</FlexCol>\n      <FlexCol>{fields.lastName}</FlexCol>\n      <FlexCol className=\"mtxxxl\" fixed><PrimaryButton type=\"submit\" disabled={!canSubmit()}>Submit</PrimaryButton></FlexCol>\n    </Grid>\n  );\n}}\n</Form>"},"children":[{"type":"text","value":"\n        "}]},{"type":"text","value":"\n      \n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"Using the FormUnit"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"To lay out a single form field without using a whole "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Form"}]},{"type":"text","value":" component, you can use the "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"FormUnit"}]},{"type":"text","value":"\ncomponent. The "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"FormUnit"}]},{"type":"text","value":" component can decorate a field with a label, a tooltip, an \"optional\" indicator, and help text."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Note that state management and other "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Form"}]},{"type":"text","value":" features are not handled by the "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"FormUnit"}]},{"type":"text","value":"."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Examples"}]},{"type":"text","value":"\n\n        "},{"type":"element","tagName":"code-editor","properties":{"language":"jsx","title":"Basic form unit","description":"","code":"<FormUnit {...{\n    label: 'Optional field',\n    labelFor: 'basic-input',\n    optional: true,\n    tooltip: 'This is a basic form unit example',\n    tooltipSize: 'sm',\n    tooltipPlacement: 'right',\n    help: <span>Enter a value in the field above</span>\n}}>\n  <Input id=\"basic-input\" type=\"text\"/>\n</FormUnit>"},"children":[{"type":"text","value":"\n        "}]},{"type":"text","value":"\n      \n\n        "},{"type":"element","tagName":"code-editor","properties":{"language":"jsx","title":"Inline form unit","description":"<p>When <code>inline</code> is <code>true</code>, the label will be placed on the same line as the field.</p>\n","code":"<div>\n    <FormUnit {...{\n        inline: true,\n        label: 'Inline field',\n        labelFor: 'select-input',\n        tooltip: 'This is an inline form unit example',\n        tooltipSize: 'sm',\n        tooltipPlacement: 'top'\n    }}>\n      <select id=\"select-input\">\n          <option>Option 1</option>\n          <option>Option 2</option>\n          <option>Option 3</option>\n      </select>\n    </FormUnit>\n    <FormUnit {...{\n        inline: true,\n        label: 'An inline checkbox with labelPosition=\"after\"',\n        labelPosition: 'after',\n        labelFor: 'checkbox-input',\n        tooltip: 'This is an inline form unit example',\n        tooltipSize: 'sm',\n        tooltipPlacement: 'top'\n    }}>\n      <Checkbox id=\"checkbox-input\"/>\n    </FormUnit>\n</div>"},"children":[{"type":"text","value":"\n        "}]},{"type":"text","value":"\n      \n\n        "},{"type":"element","tagName":"code-editor","properties":{"language":"jsx","title":"Form unit with error","description":"<p>When <code>hasError</code> is <code>true</code>, the field border and help text become red to indicate an error.</p>\n","code":"<FormUnit {...{\n    label: 'Username',\n    labelFor: 'username-input',\n    help: 'Username must be more than 8 characters',\n    hasError: true\n}}>\n  <Input id=\"username-input\" type=\"text\"/>\n</FormUnit>"},"children":[{"type":"text","value":"\n        "}]},{"type":"text","value":"\n      \n\n        "},{"type":"element","tagName":"code-editor","properties":{"language":"jsx","title":"Form unit with postLabel","description":"<p>The <code>postLabel</code> can contain any node and will be positioned in the top-right corner of a non-inline form unit.</p>\n","code":"<FormUnit {...{\n    label: 'Username',\n    labelFor: 'username-input2',\n    postLabel: <a href=\"#username-input2\" onClick={() => alert('Thanks for clicking me!')}>I am a postLabel!</a>,\n    help: 'Username must be more than 8 characters'\n}}>\n  <Input id=\"username-input2\" type=\"text\"/>\n</FormUnit>"},"children":[{"type":"text","value":"\n        "}]},{"type":"text","value":"\n      \n\n        "},{"type":"element","tagName":"code-editor","properties":{"language":"jsx","title":"Form unit with composite field","description":"","code":"<FormUnit {...{\n    label: 'Table field'\n}}>\n  <Table data={[\n      {name: 'One', enabled: <Checkbox/>},\n      {name: 'Two', enabled: <Checkbox/>},\n      {name: 'Three', enabled: <Checkbox/>}\n  ]}/>\n</FormUnit>"},"children":[{"type":"text","value":"\n        "}]},{"type":"text","value":"\n      \n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"Props"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Form\tprops"}]},{"type":"text","value":"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"},{"type":"element","tagName":"table","properties":{},"children":[{"type":"element","tagName":"thead","properties":{},"children":[{"type":"element","tagName":"tr","properties":{},"children":[{"type":"element","tagName":"th","properties":{},"children":[{"type":"text","value":"Property"}]},{"type":"element","tagName":"th","properties":{},"children":[{"type":"text","value":"Required"}]},{"type":"element","tagName":"th","properties":{},"children":[{"type":"text","value":"Type"}]},{"type":"element","tagName":"th","properties":{},"children":[{"type":"text","value":"Default"}]},{"type":"element","tagName":"th","properties":{},"children":[{"type":"text","value":"Description"}]}]}]},{"type":"element","tagName":"tbody","properties":{},"children":[{"type":"element","tagName":"tr","properties":{},"children":[{"type":"element","tagName":"td","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"afterSubmit"}]}]},{"type":"element","tagName":"td","properties":{},"children":[{"type":"text","value":"no"}]},{"type":"element","tagName":"td","properties":{},"children":[{"type":"text","value":"function"}]},{"type":"element","tagName":"td","properties":{},"children":[{"type":"text","value":"() => {}"}]},{"type":"element","tagName":"td","properties":{},"children":[{"type":"text","value":"Called with "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"{state, setState, response, reset}"}]},{"type":"text","value":". "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"response"}]},{"type":"text","value":" is the return value of "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"onSubmit"}]},{"type":"text","value":"."}]}]},{"type":"element","tagName":"tr","properties":{},"children":[{"type":"element","tagName":"td","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"children"}]}]},{"type":"element","tagName":"td","properties":{},"children":[{"type":"text","value":"no"}]},{"type":"element","tagName":"td","properties":{},"children":[{"type":"text","value":"node or function"}]},{"type":"element","tagName":"td","properties":{},"children":[]},{"type":"element","tagName":"td","properties":{},"children":[{"type":"text","value":"Called with "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"{fields, canSubmit, canReset, reset, onSubmit, setState, state, onChange, onBlur, onChangeCheckbox}"}]}]}]},{"type":"element","tagName":"tr","properties":{},"children":[{"type":"element","tagName":"td","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"fields"}]}]},{"type":"element","tagName":"td","properties":{},"children":[{"type":"text","value":"no"}]},{"type":"element","tagName":"td","properties":{},"children":[{"type":"text","value":"object"}]},{"type":"element","tagName":"td","properties":{},"children":[]},{"type":"element","tagName":"td","properties":{},"children":[{"type":"text","value":"A collection of the inputs to track."}]}]},{"type":"element","tagName":"tr","properties":{},"children":[{"type":"element","tagName":"td","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"onModified"}]}]},{"type":"element","tagName":"td","properties":{},"children":[{"type":"text","value":"no"}]},{"type":"element","tagName":"td","properties":{},"children":[{"type":"text","value":"function"}]},{"type":"element","tagName":"td","properties":{},"children":[{"type":"text","value":"() => {}"}]},{"type":"element","tagName":"td","properties":{},"children":[{"type":"text","value":"Called on every state change. Called with "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"true"}]},{"type":"text","value":" when current state is different from initial state. "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"false"}]},{"type":"text","value":" when they are the same."}]}]},{"type":"element","tagName":"tr","properties":{},"children":[{"type":"element","tagName":"td","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"onSubmit"}]}]},{"type":"element","tagName":"td","properties":{},"children":[{"type":"text","value":"no"}]},{"type":"element","tagName":"td","properties":{},"children":[{"type":"text","value":"function"}]},{"type":"element","tagName":"td","properties":{},"children":[{"type":"text","value":"() => {}"}]},{"type":"element","tagName":"td","properties":{},"children":[{"type":"text","value":"Called with the state, "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"{initial, current}"}]},{"type":"text","value":". If this function is async, we will await it."}]}]},{"type":"element","tagName":"tr","properties":{},"children":[{"type":"element","tagName":"td","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"onSubmitError"}]}]},{"type":"element","tagName":"td","properties":{},"children":[{"type":"text","value":"no"}]},{"type":"element","tagName":"td","properties":{},"children":[{"type":"text","value":"function"}]},{"type":"element","tagName":"td","properties":{},"children":[{"type":"text","value":"() => {}"}]},{"type":"element","tagName":"td","properties":{},"children":[{"type":"text","value":"Called with any error that "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"onSubmit"}]},{"type":"text","value":" throws. Should return object mapping from field "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"name"}]},{"type":"text","value":" -> String."}]}]},{"type":"element","tagName":"tr","properties":{},"children":[{"type":"element","tagName":"td","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"resetOnSubmit"}]}]},{"type":"element","tagName":"td","properties":{},"children":[{"type":"text","value":"no"}]},{"type":"element","tagName":"td","properties":{},"children":[{"type":"text","value":"bool"}]},{"type":"element","tagName":"td","properties":{},"children":[]},{"type":"element","tagName":"td","properties":{},"children":[{"type":"text","value":"If true, resets the form to its initial state after "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"onSubmit"}]},{"type":"text","value":" succeeds."}]}]}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"FormUnit props"}]},{"type":"text","value":"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"},{"type":"element","tagName":"table","properties":{},"children":[{"type":"element","tagName":"thead","properties":{},"children":[{"type":"element","tagName":"tr","properties":{},"children":[{"type":"element","tagName":"th","properties":{},"children":[{"type":"text","value":"Property"}]},{"type":"element","tagName":"th","properties":{},"children":[{"type":"text","value":"Required"}]},{"type":"element","tagName":"th","properties":{},"children":[{"type":"text","value":"Type"}]},{"type":"element","tagName":"th","properties":{},"children":[{"type":"text","value":"Default"}]},{"type":"element","tagName":"th","properties":{},"children":[{"type":"text","value":"Description"}]}]}]},{"type":"element","tagName":"tbody","properties":{},"children":[{"type":"element","tagName":"tr","properties":{},"children":[{"type":"element","tagName":"td","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"children"}]}]},{"type":"element","tagName":"td","properties":{},"children":[{"type":"text","value":"no"}]},{"type":"element","tagName":"td","properties":{},"children":[{"type":"text","value":"node"}]},{"type":"element","tagName":"td","properties":{},"children":[]},{"type":"element","tagName":"td","properties":{},"children":[{"type":"text","value":"Input field to decorate with label"}]}]},{"type":"element","tagName":"tr","properties":{},"children":[{"type":"element","tagName":"td","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"className"}]}]},{"type":"element","tagName":"td","properties":{},"children":[{"type":"text","value":"no"}]},{"type":"element","tagName":"td","properties":{},"children":[{"type":"text","value":"string"}]},{"type":"element","tagName":"td","properties":{},"children":[]},{"type":"element","tagName":"td","properties":{},"children":[{"type":"text","value":"Class name to attach to top-level "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"div"}]}]}]},{"type":"element","tagName":"tr","properties":{},"children":[{"type":"element","tagName":"td","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"fieldRowClassName"}]}]},{"type":"element","tagName":"td","properties":{},"children":[{"type":"text","value":"no"}]},{"type":"element","tagName":"td","properties":{},"children":[{"type":"text","value":"string"}]},{"type":"element","tagName":"td","properties":{},"children":[]},{"type":"element","tagName":"td","properties":{},"children":[{"type":"text","value":"Class name to attach to the inner "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"div"}]},{"type":"text","value":" surrounding the field"}]}]},{"type":"element","tagName":"tr","properties":{},"children":[{"type":"element","tagName":"td","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"hasError"}]}]},{"type":"element","tagName":"td","properties":{},"children":[{"type":"text","value":"no"}]},{"type":"element","tagName":"td","properties":{},"children":[{"type":"text","value":"boolean"}]},{"type":"element","tagName":"td","properties":{},"children":[]},{"type":"element","tagName":"td","properties":{},"children":[{"type":"text","value":"If true, applies error CSS. Turns border and help text red."}]}]},{"type":"element","tagName":"tr","properties":{},"children":[{"type":"element","tagName":"td","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"help"}]}]},{"type":"element","tagName":"td","properties":{},"children":[{"type":"text","value":"no"}]},{"type":"element","tagName":"td","properties":{},"children":[{"type":"text","value":"node"}]},{"type":"element","tagName":"td","properties":{},"children":[]},{"type":"element","tagName":"td","properties":{},"children":[{"type":"text","value":"Help block shown underneath the field"}]}]},{"type":"element","tagName":"tr","properties":{},"children":[{"type":"element","tagName":"td","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"hideHelpRow"}]}]},{"type":"element","tagName":"td","properties":{},"children":[{"type":"text","value":"no"}]},{"type":"element","tagName":"td","properties":{},"children":[{"type":"text","value":"boolean"}]},{"type":"element","tagName":"td","properties":{},"children":[{"type":"text","value":"false"}]},{"type":"element","tagName":"td","properties":{},"children":[{"type":"text","value":"Hides the help/error block underneath the field, so it does not take up any space"}]}]},{"type":"element","tagName":"tr","properties":{},"children":[{"type":"element","tagName":"td","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"inline"}]}]},{"type":"element","tagName":"td","properties":{},"children":[{"type":"text","value":"no"}]},{"type":"element","tagName":"td","properties":{},"children":[{"type":"text","value":"boolean"}]},{"type":"element","tagName":"td","properties":{},"children":[{"type":"text","value":"false"}]},{"type":"element","tagName":"td","properties":{},"children":[{"type":"text","value":"If "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"true"}]},{"type":"text","value":" positions the label on the same line as the field."}]}]},{"type":"element","tagName":"tr","properties":{},"children":[{"type":"element","tagName":"td","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"label"}]}]},{"type":"element","tagName":"td","properties":{},"children":[{"type":"text","value":"no"}]},{"type":"element","tagName":"td","properties":{},"children":[{"type":"text","value":"string"}]},{"type":"element","tagName":"td","properties":{},"children":[]},{"type":"element","tagName":"td","properties":{},"children":[{"type":"text","value":"Text to use for field label"}]}]},{"type":"element","tagName":"tr","properties":{},"children":[{"type":"element","tagName":"td","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"labelClassName"}]}]},{"type":"element","tagName":"td","properties":{},"children":[{"type":"text","value":"no"}]},{"type":"element","tagName":"td","properties":{},"children":[{"type":"text","value":"string"}]},{"type":"element","tagName":"td","properties":{},"children":[]},{"type":"element","tagName":"td","properties":{},"children":[{"type":"text","value":"Class name to attach to the inner "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"label"}]},{"type":"text","value":" element"}]}]},{"type":"element","tagName":"tr","properties":{},"children":[{"type":"element","tagName":"td","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"labelFor"}]}]},{"type":"element","tagName":"td","properties":{},"children":[{"type":"text","value":"no"}]},{"type":"element","tagName":"td","properties":{},"children":[{"type":"text","value":"string"}]},{"type":"element","tagName":"td","properties":{},"children":[]},{"type":"element","tagName":"td","properties":{},"children":[{"type":"text","value":"Value of the label's "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"for"}]},{"type":"text","value":" attribute. If not provided, defaults to the field's "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"id"}]},{"type":"text","value":"."}]}]},{"type":"element","tagName":"tr","properties":{},"children":[{"type":"element","tagName":"td","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"labelPosition"}]}]},{"type":"element","tagName":"td","properties":{},"children":[{"type":"text","value":"no"}]},{"type":"element","tagName":"td","properties":{},"children":[{"type":"text","value":"oneOf(['after'])"}]},{"type":"element","tagName":"td","properties":{},"children":[]},{"type":"element","tagName":"td","properties":{},"children":[{"type":"text","value":"If "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"after"}]},{"type":"text","value":" and "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"inline=true"}]},{"type":"text","value":" positions the label after the field."}]}]},{"type":"element","tagName":"tr","properties":{},"children":[{"type":"element","tagName":"td","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"labelRowClassName"}]}]},{"type":"element","tagName":"td","properties":{},"children":[{"type":"text","value":"no"}]},{"type":"element","tagName":"td","properties":{},"children":[{"type":"text","value":"string"}]},{"type":"element","tagName":"td","properties":{},"children":[]},{"type":"element","tagName":"td","properties":{},"children":[{"type":"text","value":"Class name to attach to the inner "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"div"}]},{"type":"text","value":" surrounding the label"}]}]},{"type":"element","tagName":"tr","properties":{},"children":[{"type":"element","tagName":"td","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"optional"}]}]},{"type":"element","tagName":"td","properties":{},"children":[{"type":"text","value":"no"}]},{"type":"element","tagName":"td","properties":{},"children":[{"type":"text","value":"boolean"}]},{"type":"element","tagName":"td","properties":{},"children":[{"type":"text","value":"false"}]},{"type":"element","tagName":"td","properties":{},"children":[{"type":"text","value":"If "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"true"}]},{"type":"text","value":", marks a field as optional and adds "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"optionalText"}]},{"type":"text","value":" to label"}]}]},{"type":"element","tagName":"tr","properties":{},"children":[{"type":"element","tagName":"td","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"optionalText"}]}]},{"type":"element","tagName":"td","properties":{},"children":[{"type":"text","value":"no"}]},{"type":"element","tagName":"td","properties":{},"children":[{"type":"text","value":"string"}]},{"type":"element","tagName":"td","properties":{},"children":[{"type":"text","value":"'(Optional)'"}]},{"type":"element","tagName":"td","properties":{},"children":[{"type":"text","value":"Text to add to label when field is optional"}]}]},{"type":"element","tagName":"tr","properties":{},"children":[{"type":"element","tagName":"td","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"postLabel"}]}]},{"type":"element","tagName":"td","properties":{},"children":[{"type":"text","value":"no"}]},{"type":"element","tagName":"td","properties":{},"children":[{"type":"text","value":"oneOf(node, function)"}]},{"type":"element","tagName":"td","properties":{},"children":[]},{"type":"element","tagName":"td","properties":{},"children":[{"type":"text","value":"Content to place in the top right of a non-inline "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"FormUnit"}]},{"type":"text","value":", or a callback, called with "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"{state, setValues}"}]},{"type":"text","value":", returning that content"}]}]},{"type":"element","tagName":"tr","properties":{},"children":[{"type":"element","tagName":"td","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"retainLabelHeight"}]}]},{"type":"element","tagName":"td","properties":{},"children":[{"type":"text","value":"no"}]},{"type":"element","tagName":"td","properties":{},"children":[{"type":"text","value":"boolean"}]},{"type":"element","tagName":"td","properties":{},"children":[{"type":"text","value":"false"}]},{"type":"element","tagName":"td","properties":{},"children":[{"type":"text","value":"For fields without a label, add an empty space above the field to preserve the space where the label would be."}]}]},{"type":"element","tagName":"tr","properties":{},"children":[{"type":"element","tagName":"td","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"setValues"}]}]},{"type":"element","tagName":"td","properties":{},"children":[{"type":"text","value":"no"}]},{"type":"element","tagName":"td","properties":{},"children":[{"type":"text","value":"function"}]},{"type":"element","tagName":"td","properties":{},"children":[]},{"type":"element","tagName":"td","properties":{},"children":[{"type":"text","value":"Function passed to postLabel callback"}]}]},{"type":"element","tagName":"tr","properties":{},"children":[{"type":"element","tagName":"td","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"state"}]}]},{"type":"element","tagName":"td","properties":{},"children":[{"type":"text","value":"no"}]},{"type":"element","tagName":"td","properties":{},"children":[{"type":"text","value":"object"}]},{"type":"element","tagName":"td","properties":{},"children":[]},{"type":"element","tagName":"td","properties":{},"children":[{"type":"text","value":"Object passed to postLabel callback"}]}]},{"type":"element","tagName":"tr","properties":{},"children":[{"type":"element","tagName":"td","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"tooltip"}]}]},{"type":"element","tagName":"td","properties":{},"children":[{"type":"text","value":"no"}]},{"type":"element","tagName":"td","properties":{},"children":[{"type":"text","value":"node"}]},{"type":"element","tagName":"td","properties":{},"children":[]},{"type":"element","tagName":"td","properties":{},"children":[{"type":"text","value":"Content to place on the tooltip"}]}]},{"type":"element","tagName":"tr","properties":{},"children":[{"type":"element","tagName":"td","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"tooltipPlacement"}]}]},{"type":"element","tagName":"td","properties":{},"children":[{"type":"text","value":"no"}]},{"type":"element","tagName":"td","properties":{},"children":[{"type":"text","value":"oneOf('top', 'bottom', 'left', 'right')"}]},{"type":"element","tagName":"td","properties":{},"children":[{"type":"text","value":"'top'"}]},{"type":"element","tagName":"td","properties":{},"children":[{"type":"text","value":"Placement of tooltip in relation to icon"}]}]},{"type":"element","tagName":"tr","properties":{},"children":[{"type":"element","tagName":"td","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"tooltipSize"}]}]},{"type":"element","tagName":"td","properties":{},"children":[{"type":"text","value":"no"}]},{"type":"element","tagName":"td","properties":{},"children":[{"type":"text","value":"oneOf(['sm', 'md', 'lg'])"}]},{"type":"element","tagName":"td","properties":{},"children":[{"type":"text","value":"'md'"}]},{"type":"element","tagName":"td","properties":{},"children":[{"type":"text","value":"Size of tooltip"}]}]}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"Imports"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Import React components (including CSS):"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{"className":["sg-pre","language-js"]},"children":[{"type":"element","tagName":"code","properties":{"className":["sg-code","language-js"]},"children":[{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"import"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"{"}]},{"type":"text","value":"Form"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":","}]},{"type":"text","value":" FormUnit"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"}"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"from"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"'pivotal-ui/react/forms'"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":";"}]}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Import CSS only:"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{"className":["sg-pre","language-js"]},"children":[{"type":"element","tagName":"code","properties":{"className":["sg-code","language-js"]},"children":[{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"import"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"'pivotal-ui/css/forms'"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":";"}]}]}]}],"data":{"quirksMode":false}},"fields":{"route":"/components/forms/","group":"components"},"frontmatter":{"title":"Forms","deprecationMessage":null}}},"pageContext":{}}